
NPLB is used on a fasta file containing a list promoter sequences. It finds the optimal number of promoter architectures(PAs) each with their own set of promoter elements(PEs). 

The following packages need to be installed in order to run NPLB:
 * Python 2.6+ (Not compatible with Python 3.x)
 * python-numpy
 * python-ctypes
 * python-multiprocessing
 * python-re
 * python-pickle
 * gnuplot 4.6+
 * Truetype fonts

INSTALLATION:

NPLB is	freely available at https://github.com/computationalBiology/NPLB/.  Execute the following commands to download and install NPLB:
wget "https://github.com/computationalBiology/NPLB/archive/v1.0.0.tar.gz"
tar -xvf  v1.0.0.tar.gz
cd NPLB-1.0.0/NPLB/
make

To execute NPLB from anywhere export the path to NPLB to the PATH variable.

Note: gnuplot font path should be set the directory containing truetype fonts.
It can be set as export GDFONTPATH=<path to truetype fonts directory>

USAGE:

To learn new models using promoterLearn:
(path to NPLB)/promoterLearn [options]

OPTIONS

	-f filename
	   Compulsory. Data file for which hidded promoter architectures are to be identified. File must be in fasta format and must consist of sequences of equal length. 

	-o directory
	   Valid directory name. If it exists then a new one is created with given name along with an extension number. Default directory: NPLBoutput<extension> in the current working directory.

	-a positive real number
	   Pseudocount. Default value: 1.

	-t times
	   Maximum number of iterations over the entire dataset. Default: It iterates at most 1000 times and then loops until the likelihood stops increasing for 10*n consecutive iterations where n is the sum of number of sequences and number of architectures times length of sequences.

	-i 0 or 1
	   Flag to save image matrix in the given directory. Default value: 1

	-v 0 or 1
	   Flag to save likelihood plots of the models learned in each fold.

	-kfold k
	   Value of k in K-fold cross validation. Default value: 5

	-lambda l
	   Non negative real number. It is the regularization parameter used for determining the importance of features. Default value: Learns models by varying lambda value and chooses the best one.

	-lcount lc
	   Number of models to be learnt while training. Only the best model is considered. Default value: 5

	-minarch mn
	   Minimum number of architectures possible for the given dataset. Default value: 1

	-maxarch mx
	   Maximum number of architectures possible for the given dataset. Default value: 20

	-proc pr
	   Maximum number of processors to be used for computation. Default value is the number of processors the system has.

	-plotExtra <file name>
	   Plots data from given tab separated file as pie charts or boxplots (depending on the type of data) for each architecture of the best model. Note: -pCol must also be set.

	-pCol pc
	   Natural number. Plots the data in the given column of the given file in the form of pie charts or boxplots with respect to the architectures of the best model. Note: -plotExtra must specify a valid filename

	-sortBy sb
	   Natural number. Sort architectures in increasing order of median values calculated from values in column -sortBy of file -plotExtra. Note: -plotExtra must specify a valid filename and -pCol must be set

EXAMPLES
	The following examples illustrate the usage of the options.
	
	To run with all the default options:
	   promoterLearn -f example.fa

        To run for architectures ranging from 2 to 5 with 100 iterations in directory Output:
           promoterLearn -f example.fa -minarch 2 -maxarch 5 -t 100 -o output
				 
	To run it for architectures ranging from 15 to 25 and save likelihood plots:
	   promoterLearn -f example.fa -minarch 15 -maxarch 25 -v 1 -i 1 
	
	To plot pie charts in fourth column of file example.info and rearrange architectures according to the sixth column:
	   promoterLearn -f example.fa -plotExtra example.info -pCol 4 -sortBy 6

	To find the list of options:
	   promoterLearn

Model learned by NPLB can also be used to determine architectures of another dataset which has seqeunces of same length as the model.

USAGE:

To use an existing model to learn new PAs:
(path to NPLB)/promoterClassify [options]

OPTIONS

	-f filename
	   Compulsory. Data file for which hidded promoter architectures are to be identified. File must be in fasta format and must consist of sequences of equal length. 
	   
	-m model
	   Compulsory. Model learned by executing promoterLearn on a given dataset. Model must have sequences of the same length as the input fasta file.

	-o directory
	   Valid directory name. If it exists then a new one is created with given name along with an extension number. Default directory: NPLBoutput<extension> in the current working directory.

	-i 0 or 1
	   Flag to save image matrix in the given directory. Default value: 1

	-plotExtra <file name>
	   Plots data from given tab separated file as pie charts or boxplots (depending on the type of data) for each architecture of the best model. Note: -pCol must also be set.

	-pCol pc
	   Natural number. Plots the data in the given column of the given file in the form of pie charts or boxplots with respect to the architectures of the best model. Note: -plotExtra must specify a valid filename

	-sortBy sb
	   Natural number. Sort architectures in increasing order of median values calculated from values in column -sortBy of file -plotExtra. Note: -plotExtra must specify a valid filename and -pCol must be set

EXAMPLES
	The following examples illustrate the usage of the options.

	To find labels for dataset example2.fa from model present in directory Output as bestmodel.p:
	   promoterClassify -f example2.fa -m Output/bestmodel.p

	To find labels for dataset example2.fa from model bestmodel.p and plot pie chart or boxplot for column 4 of example3.info:
	   promoterClassify -f example2.fa -m bestmodel.p -plotExtra example3.info -pCol 4
	
	To find the list of options:
	   promoterClassify

CONTACT
	For further details and to report bugs: l.narlikar@ncl.res.in

LICENSE
	GNU General Public License v3.0
